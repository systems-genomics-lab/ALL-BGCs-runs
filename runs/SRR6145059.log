+ set -o pipefail
++ date +%s%N
+ ts=1624406294382171515
+ sample=SRR6145059
+ echo '--START-- SRR6145059'
--START-- SRR6145059
+ date
Tue Jun 22 23:58:14 UTC 2021
+ export KRAKEN=/data/kraken2
+ KRAKEN=/data/kraken2
+ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ncbi/sra-tools/bin/:/usr/local/ncbi/ngs-tools/bin/:/usr/local/ncbi/ncbi-vdb/bin:/usr/local/miniconda3/bin:/data/kraken2/bin
+ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ncbi/sra-tools/bin/:/usr/local/ncbi/ngs-tools/bin/:/usr/local/ncbi/ncbi-vdb/bin:/usr/local/miniconda3/bin:/data/kraken2/bin
+ export KRAKENDB=/data/kraken2/db
+ KRAKENDB=/data/kraken2/db
+ PROJECT=/projects/metaBGC/
++ grep -c '^processor' /proc/cpuinfo
+ cpus=192
+ echo 'CPUs: 192'
CPUs: 192
+ original1=SRR6145059_1.fastq.gz
+ original2=SRR6145059_2.fastq.gz
+ filtered1=SRR6145059_1.filtered.fastq.gz
+ filtered2=SRR6145059_2.filtered.fastq.gz
+ reads1=SRR6145059_1.final.fastq.gz
+ reads2=SRR6145059_1.final.fastq.gz
+ echo

+ echo '-- STEP 1 -- Downloading the fastq'
-- STEP 1 -- Downloading the fastq
+ cd /projects/metaBGC//samples/
+ prefetch SRR6145059

2021-06-22T23:58:17 prefetch.2.10.8: 1) Downloading 'SRR6145059'...
2021-06-22T23:58:17 prefetch.2.10.8:  Downloading via HTTPS...
2021-06-23T00:00:51 prefetch.2.10.8:  HTTPS download succeed
2021-06-23T00:00:54 prefetch.2.10.8:  'SRR6145059' is valid
2021-06-23T00:00:54 prefetch.2.10.8: 1) 'SRR6145059' was downloaded successfully
2021-06-23T00:00:54 prefetch.2.10.8: 'SRR6145059' has 0 unresolved dependencies
+ cd /projects/metaBGC//samples/SRR6145059
+ fastq-dump --split-files --split-spot --skip-technical --gzip SRR6145059.sra
Read 23140234 spots for SRR6145059.sra
Written 23140234 spots for SRR6145059.sra
+ zcat SRR6145059_1.fastq.gz
+ wc -l
+ awk -v sample=SRR6145059 '{print sample"\t"$0/4;}'
+ echo

+ echo '-- STEP 2 -- QC'
-- STEP 2 -- QC
+ fastp --verbose --thread 192 --in1 SRR6145059_1.fastq.gz --in2 SRR6145059_2.fastq.gz --out1 SRR6145059_1.filtered.fastq.gz --out2 SRR6145059_2.filtered.fastq.gz --json SRR6145059.fastp.jason --html SRR6145059.fastp.html --report_title SRR6145059
WARNING: fastp uses up to 16 threads although you specified 192
[00:24:40]
[00:24:52]
[00:25:01]
[00:25:10]
[00:25:22]
[00:25:33]
[00:25:45]
[00:25:56]
[00:26:08]
[00:26:19]
[00:26:31]
[00:26:42]
[00:26:53]
[00:27:05]
[00:27:16]
[00:27:28]
[00:27:40]
[00:27:52]
[00:28:04]
[00:28:15]
[00:28:27]
[00:28:39]
[00:28:50]
[00:29:03]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
[00:29:04]
Read1 before filtering:
total reads: 23140234
total bases: 2299322597
Q20 bases: 2229774927(96.9753%)
Q30 bases: 2150006321(93.5061%)

Read2 before filtering:
total reads: 23140234
total bases: 2295777299
Q20 bases: 2180319331(94.9709%)
Q30 bases: 2075440751(90.4025%)

Read1 after filtering:
total reads: 22341915
total bases: 2212771763
Q20 bases: 2158664062(97.5548%)
Q30 bases: 2090272006(94.464%)

Read2 after filtering:
total reads: 22341915
total bases: 2210220623
Q20 bases: 2134486258(96.5734%)
Q30 bases: 2048366585(92.677%)

Filtering result:
reads passed filter: 44683830
reads failed due to low quality: 1581924
reads failed due to too many N: 14714
reads failed due to too short: 0
reads with adapter trimmed: 1906946
bases trimmed due to adapters: 14834126

Duplication rate: 0.0645968%

Insert size peak (evaluated by paired-end reads): 146

JSON report: SRR6145059.fastp.jason
HTML report: SRR6145059.fastp.html

fastp --verbose --thread 192 --in1 SRR6145059_1.fastq.gz --in2 SRR6145059_2.fastq.gz --out1 SRR6145059_1.filtered.fastq.gz --out2 SRR6145059_2.filtered.fastq.gz --json SRR6145059.fastp.jason --html SRR6145059.fastp.html --report_title SRR6145059 
fastp v0.21.0, time used: 265 seconds

real	4m25.004s
user	19m11.437s
sys	1m55.717s
+ zcat SRR6145059_1.filtered.fastq.gz
+ wc -l
+ awk -v sample=SRR6145059 '{print sample"\t"$0/4;}'
+ echo

+ echo '-- STEP 2 -- Subsample'
-- STEP 2 -- Subsample
+ maxreads=10000000
+ seqtk sample -s123 SRR6145059_1.filtered.fastq.gz 10000000
+ gzip -c
+ seqtk sample -s123 SRR6145059_2.filtered.fastq.gz 10000000
+ gzip -c
+ zcat SRR6145059_1.final.fastq.gz
+ wc -l
+ awk -v sample=SRR6145059 '{print sample"\t"$0/4;}'
+ echo

+ echo '-- STEP 3 -- Taxonomic classification of reads'
-- STEP 3 -- Taxonomic classification of reads
+ kraken2 --db /data/kraken2/db --threads 192 --classified-out SRR6145059.reads.kraken.classified#.fq --unclassified-out SRR6145059.reads.kraken.unclassified#.fq --report SRR6145059.reads.kraken --use-names --pair SRR6145059_1.final.fastq.gz SRR6145059_1.final.fastq.gz

real	1m19.076s
user	4m8.474s
sys	1m17.296s
+ set +e
+ set +o pipefail
+ bracken -d /data/kraken2/db -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.species.tmp -l S -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.species.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l S -t 1
PROGRAM START TIME: 06-23-2021 00:37:57
BRACKEN SUMMARY (Kraken report: SRR6145059.reads.kraken)
    >>> Threshold: 1 
    >>> Number of species in sample: 6046 
	  >> Number of species with reads > threshold: 6046 
	  >> Number of species with reads < threshold: 0 
    >>> Total reads in sample: 10000000
	  >> Total reads kept at species level (reads > threshold): 7975037
	  >> Total reads discarded (species reads < threshold): 0
	  >> Reads distributed: 8400764
	  >> Reads not distributed (eg. no species above threshold): 1093
	  >> Unclassified reads: 1598143
BRACKEN OUTPUT PRODUCED: SRR6145059.reads.bracken.species.tmp
PROGRAM END TIME: 06-23-2021 00:37:58
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.genus.tmp -l G -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.genus.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l G -t 1
PROGRAM START TIME: 06-23-2021 00:37:58
BRACKEN SUMMARY (Kraken report: SRR6145059.reads.kraken)
    >>> Threshold: 1 
    >>> Number of genuses in sample: 1715 
	  >> Number of genuses with reads > threshold: 1715 
	  >> Number of genuses with reads < threshold: 0 
    >>> Total reads in sample: 10000000
	  >> Total reads kept at genuses level (reads > threshold): 8242890
	  >> Total reads discarded (genuses reads < threshold): 0
	  >> Reads distributed: 8400779
	  >> Reads not distributed (eg. no genuses above threshold): 1078
	  >> Unclassified reads: 1598143
BRACKEN OUTPUT PRODUCED: SRR6145059.reads.bracken.genus.tmp
PROGRAM END TIME: 06-23-2021 00:37:58
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.order.tmp -l O -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.order.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l O -t 1
PROGRAM START TIME: 06-23-2021 00:37:58
BRACKEN SUMMARY (Kraken report: SRR6145059.reads.kraken)
    >>> Threshold: 1 
    >>> Number of orders in sample: 204 
	  >> Number of orders with reads > threshold: 204 
	  >> Number of orders with reads < threshold: 0 
    >>> Total reads in sample: 10000000
	  >> Total reads kept at orders level (reads > threshold): 8322079
	  >> Total reads discarded (orders reads < threshold): 0
	  >> Reads distributed: 8400779
	  >> Reads not distributed (eg. no orders above threshold): 1078
	  >> Unclassified reads: 1598143
BRACKEN OUTPUT PRODUCED: SRR6145059.reads.bracken.order.tmp
PROGRAM END TIME: 06-23-2021 00:37:59
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.family.tmp -l F -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.family.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l F -t 1
PROGRAM START TIME: 06-23-2021 00:37:59
BRACKEN SUMMARY (Kraken report: SRR6145059.reads.kraken)
    >>> Threshold: 1 
    >>> Number of families in sample: 443 
	  >> Number of families with reads > threshold: 443 
	  >> Number of families with reads < threshold: 0 
    >>> Total reads in sample: 10000000
	  >> Total reads kept at families level (reads > threshold): 8292323
	  >> Total reads discarded (families reads < threshold): 0
	  >> Reads distributed: 8400779
	  >> Reads not distributed (eg. no families above threshold): 1078
	  >> Unclassified reads: 1598143
BRACKEN OUTPUT PRODUCED: SRR6145059.reads.bracken.family.tmp
PROGRAM END TIME: 06-23-2021 00:37:59
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.class.tmp -l C -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.class.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l C -t 1
PROGRAM START TIME: 06-23-2021 00:37:59
BRACKEN SUMMARY (Kraken report: SRR6145059.reads.kraken)
    >>> Threshold: 1 
    >>> Number of classes in sample: 97 
	  >> Number of classes with reads > threshold: 97 
	  >> Number of classes with reads < threshold: 0 
    >>> Total reads in sample: 10000000
	  >> Total reads kept at classes level (reads > threshold): 8347972
	  >> Total reads discarded (classes reads < threshold): 0
	  >> Reads distributed: 8400779
	  >> Reads not distributed (eg. no classes above threshold): 1078
	  >> Unclassified reads: 1598143
BRACKEN OUTPUT PRODUCED: SRR6145059.reads.bracken.class.tmp
PROGRAM END TIME: 06-23-2021 00:38:00
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.phylum.tmp -l P -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.phylum.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l P -t 1
PROGRAM START TIME: 06-23-2021 00:38:00
BRACKEN SUMMARY (Kraken report: SRR6145059.reads.kraken)
    >>> Threshold: 1 
    >>> Number of phylums in sample: 57 
	  >> Number of phylums with reads > threshold: 57 
	  >> Number of phylums with reads < threshold: 0 
    >>> Total reads in sample: 10000000
	  >> Total reads kept at phylums level (reads > threshold): 8364092
	  >> Total reads discarded (phylums reads < threshold): 0
	  >> Reads distributed: 8400779
	  >> Reads not distributed (eg. no phylums above threshold): 1078
	  >> Unclassified reads: 1598143
BRACKEN OUTPUT PRODUCED: SRR6145059.reads.bracken.phylum.tmp
PROGRAM END TIME: 06-23-2021 00:38:00
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.domain.tmp -l D -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.reads.kraken -o SRR6145059.reads.bracken.domain.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l D -t 1
PROGRAM START TIME: 06-23-2021 00:38:00
BRACKEN SUMMARY (Kraken report: SRR6145059.reads.kraken)
    >>> Threshold: 1 
    >>> Number of domains in sample: 4 
	  >> Number of domains with reads > threshold: 4 
	  >> Number of domains with reads < threshold: 0 
    >>> Total reads in sample: 10000000
	  >> Total reads kept at domains level (reads > threshold): 8380925
	  >> Total reads discarded (domains reads < threshold): 0
	  >> Reads distributed: 8400779
	  >> Reads not distributed (eg. no domains above threshold): 1078
	  >> Unclassified reads: 1598143
BRACKEN OUTPUT PRODUCED: SRR6145059.reads.bracken.domain.tmp
PROGRAM END TIME: 06-23-2021 00:38:01
  Bracken complete.
+ cat SRR6145059.reads.bracken.species.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.reads.bracken.species.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ /projects/metaBGC//scripts/plot_abundances.sh SRR6145059.reads.bracken.species.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  name = col_character(),
  taxonomy_id = col_double(),
  taxonomy_lvl = col_character(),
  kraken_assigned_reads = col_double(),
  added_reads = col_double(),
  new_est_reads = col_double(),
  fraction_total_reads = col_double()
)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ Homo~        9606 S                     5310201        3274
2 SRR61~ Cand~     2572088 S                          76          39
3 SRR61~ Cand~     2572087 S                          17          24
4 SRR61~ Nost~     1618022 S                          16           2
5 SRR61~ Bloc~     1505596 S                           6           0
6 SRR61~ Dein~     1309411 S                         297         131
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
mutate: changed 6,016 values (>99%) of 'name' (0 new NA)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ Homo~        9606 S                     5310201        3274
2 SRR61~ _oth~     2572088 S                          76          39
3 SRR61~ _oth~     2572087 S                          17          24
4 SRR61~ _oth~     1618022 S                          16           2
5 SRR61~ _oth~     1505596 S                           6           0
6 SRR61~ _oth~     1309411 S                         297         131
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
group_by: one grouping variable (name)
summarize: now 31 rows and 2 columns, ungrouped
# A tibble: 6 x 2
  name                             fraction_total_reads
  <chr>                                           <dbl>
1 Acinetobacter baumannii                       0.00175
2 Burkholderia sp. OLGA172                      0.0027 
3 Corynebacterium segmentosum                   0.00364
4 Corynebacterium ureicelerivorans              0.00104
5 Cutibacterium acnes                           0.0693 
6 Cutibacterium granulosum                      0.00187
# A tibble: 6 x 2
  name                      fraction_total_reads
  <chr>                                    <dbl>
1 Homo sapiens                           0.632  
2 Paraburkholderia fungorum              0.128  
3 _other_                                0.0982 
4 Cutibacterium acnes                    0.0693 
5 Micrococcus luteus                     0.0122 
6 Moraxella osloensis                    0.00948
# A tibble: 6 x 2
  name                      fraction_total_reads
  <chr>                                    <dbl>
1 Homo sapiens                           0.632  
2 Paraburkholderia fungorum              0.128  
3 _other_                                0.0982 
4 Cutibacterium acnes                    0.0693 
5 Micrococcus luteus                     0.0122 
6 Moraxella osloensis                    0.00948
# A tibble: 6 x 2
  name                        fraction_total_reads
  <chr>                                      <dbl>
1 Burkholderia sp. OLGA172                 0.0027 
2 Corynebacterium segmentosum              0.00364
3 Staphylococcus epidermidis               0.00381
4 Klebsiella michiganensis                 0.00496
5 Moraxella osloensis                      0.00948
6 Micrococcus luteus                       0.0122 
mutate: converted 'name' from character to factor (0 new NA)
# A tibble: 6 x 2
  name                        fraction_total_reads
  <fct>                                      <dbl>
1 Burkholderia sp. OLGA172                 0.0027 
2 Corynebacterium segmentosum              0.00364
3 Staphylococcus epidermidis               0.00381
4 Klebsiella michiganensis                 0.00496
5 Moraxella osloensis                      0.00948
6 Micrococcus luteus                       0.0122 
Saving 7 x 7 in image
+ cat SRR6145059.reads.bracken.genus.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.reads.bracken.genus.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ /projects/metaBGC//scripts/plot_abundances.sh SRR6145059.reads.bracken.genus.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  name = col_character(),
  taxonomy_id = col_double(),
  taxonomy_lvl = col_character(),
  kraken_assigned_reads = col_double(),
  added_reads = col_double(),
  new_est_reads = col_double(),
  fraction_total_reads = col_double()
)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ Cand~     1988031 G                          57          23
2 SRR61~ Cand~      327159 G                          62           0
3 SRR61~ Cand~      332162 G                          52           0
4 SRR61~ Cand~      198251 G                          31          16
5 SRR61~ Cand~     1331051 G                          28          17
6 SRR61~ Cand~      622681 G                          43           2
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
mutate: changed 1,682 values (98%) of 'name' (0 new NA)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ _oth~     1988031 G                          57          23
2 SRR61~ _oth~      327159 G                          62           0
3 SRR61~ _oth~      332162 G                          52           0
4 SRR61~ _oth~      198251 G                          31          16
5 SRR61~ _oth~     1331051 G                          28          17
6 SRR61~ _oth~      622681 G                          43           2
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
group_by: one grouping variable (name)
summarize: now 34 rows and 2 columns, ungrouped
# A tibble: 6 x 2
  name             fraction_total_reads
  <chr>                           <dbl>
1 Acinetobacter                 0.00562
2 Actinomyces                   0.00161
3 Bosea                         0.001  
4 Brevundimonas                 0.00253
5 Burkholderia                  0.00446
6 Chryseobacterium              0.00305
# A tibble: 6 x 2
  name             fraction_total_reads
  <chr>                           <dbl>
1 Homo                           0.632 
2 Paraburkholderia               0.133 
3 Cutibacterium                  0.0718
4 _other_                        0.0452
5 Micrococcus                    0.0139
6 Staphylococcus                 0.0127
# A tibble: 6 x 2
  name             fraction_total_reads
  <chr>                           <dbl>
1 Homo                           0.632 
2 Paraburkholderia               0.133 
3 Cutibacterium                  0.0718
4 _other_                        0.0452
5 Micrococcus                    0.0139
6 Staphylococcus                 0.0127
# A tibble: 6 x 2
  name            fraction_total_reads
  <chr>                          <dbl>
1 Acinetobacter                0.00562
2 Klebsiella                   0.00796
3 Corynebacterium              0.00947
4 Moraxella                    0.0095 
5 Staphylococcus               0.0127 
6 Micrococcus                  0.0139 
mutate: converted 'name' from character to factor (0 new NA)
# A tibble: 6 x 2
  name            fraction_total_reads
  <fct>                          <dbl>
1 Acinetobacter                0.00562
2 Klebsiella                   0.00796
3 Corynebacterium              0.00947
4 Moraxella                    0.0095 
5 Staphylococcus               0.0127 
6 Micrococcus                  0.0139 
Saving 7 x 7 in image
+ cat SRR6145059.reads.bracken.order.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.reads.bracken.order.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ /projects/metaBGC//scripts/plot_abundances.sh SRR6145059.reads.bracken.order.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  name = col_character(),
  taxonomy_id = col_double(),
  taxonomy_lvl = col_character(),
  kraken_assigned_reads = col_double(),
  added_reads = col_double(),
  new_est_reads = col_double(),
  fraction_total_reads = col_double()
)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ Cand~     2039638 O                          53           3
2 SRR61~ Cand~     2497644 O                           6           7
3 SRR61~ Cand~     1127829 O                           5           0
4 SRR61~ Prim~        9443 O                     5310201        3274
5 SRR61~ Burk~       80840 O                     1189372        7564
6 SRR61~ Prop~       85009 O                      613435        7171
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
mutate: changed 183 values (90%) of 'name' (0 new NA)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ _oth~     2039638 O                          53           3
2 SRR61~ _oth~     2497644 O                           6           7
3 SRR61~ _oth~     1127829 O                           5           0
4 SRR61~ Prim~        9443 O                     5310201        3274
5 SRR61~ Burk~       80840 O                     1189372        7564
6 SRR61~ Prop~       85009 O                      613435        7171
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
group_by: one grouping variable (name)
summarize: now 22 rows and 2 columns, ungrouped
# A tibble: 6 x 2
  name              fraction_total_reads
  <chr>                            <dbl>
1 Actinomycetales                0.00192
2 Bacillales                     0.0138 
3 Burkholderiales                0.142  
4 Caulobacterales                0.00302
5 Corynebacteriales              0.0248 
6 Deinococcales                  0.00132
# A tibble: 6 x 2
  name                fraction_total_reads
  <chr>                              <dbl>
1 Primates                          0.632 
2 Burkholderiales                   0.142 
3 Propionibacteriales               0.0739
4 Micrococcales                     0.0297
5 Corynebacteriales                 0.0248
6 Pseudomonadales                   0.0185
# A tibble: 6 x 2
  name                fraction_total_reads
  <chr>                              <dbl>
1 Primates                          0.632 
2 Burkholderiales                   0.142 
3 Propionibacteriales               0.0739
4 Micrococcales                     0.0297
5 Corynebacteriales                 0.0248
6 Pseudomonadales                   0.0185
# A tibble: 6 x 2
  name              fraction_total_reads
  <chr>                            <dbl>
1 Rhizobiales                    0.00562
2 Enterobacterales               0.0122 
3 _other_                        0.0122 
4 Bacillales                     0.0138 
5 Pseudomonadales                0.0185 
6 Corynebacteriales              0.0248 
mutate: converted 'name' from character to factor (0 new NA)
# A tibble: 6 x 2
  name              fraction_total_reads
  <fct>                            <dbl>
1 Rhizobiales                    0.00562
2 Enterobacterales               0.0122 
3 _other_                        0.0122 
4 Bacillales                     0.0138 
5 Pseudomonadales                0.0185 
6 Corynebacteriales              0.0248 
Saving 7 x 7 in image
+ cat SRR6145059.reads.bracken.family.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.reads.bracken.family.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ /projects/metaBGC//scripts/plot_abundances.sh SRR6145059.reads.bracken.family.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  name = col_character(),
  taxonomy_id = col_double(),
  taxonomy_lvl = col_logical(),
  kraken_assigned_reads = col_double(),
  added_reads = col_double(),
  new_est_reads = col_double(),
  fraction_total_reads = col_double()
)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <lgl>                   <dbl>       <dbl>
1 SRR61~ Cand~     2162846 FALSE                      53           3
2 SRR61~ Cand~     2497645 FALSE                       6           7
3 SRR61~ Cand~     1127830 FALSE                       5           0
4 SRR61~ Cand~     1777752 FALSE                       4           0
5 SRR61~ Cand~     1328881 FALSE                       3           0
6 SRR61~ Cand~     2517203 FALSE                       1           0
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
mutate: changed 409 values (92%) of 'name' (0 new NA)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <lgl>                   <dbl>       <dbl>
1 SRR61~ _oth~     2162846 FALSE                      53           3
2 SRR61~ _oth~     2497645 FALSE                       6           7
3 SRR61~ _oth~     1127830 FALSE                       5           0
4 SRR61~ _oth~     1777752 FALSE                       4           0
5 SRR61~ _oth~     1328881 FALSE                       3           0
6 SRR61~ _oth~     2517203 FALSE                       1           0
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
group_by: one grouping variable (name)
summarize: now 35 rows and 2 columns, ungrouped
# A tibble: 6 x 2
  name               fraction_total_reads
  <chr>                             <dbl>
1 Actinomycetaceae                0.00192
2 Bradyrhizobiaceae               0.00171
3 Burkholderiaceae                0.139  
4 Caulobacteraceae                0.00302
5 Comamonadaceae                  0.00185
6 Corynebacteriaceae              0.00947
# A tibble: 6 x 2
  name                 fraction_total_reads
  <chr>                               <dbl>
1 Hominidae                          0.632 
2 Burkholderiaceae                   0.139 
3 Propionibacteriaceae               0.0724
4 _other_                            0.0215
5 Micrococcaceae                     0.0170
6 Moraxellaceae                      0.0152
# A tibble: 6 x 2
  name                 fraction_total_reads
  <chr>                               <dbl>
1 Hominidae                          0.632 
2 Burkholderiaceae                   0.139 
3 Propionibacteriaceae               0.0724
4 _other_                            0.0215
5 Micrococcaceae                     0.0170
6 Moraxellaceae                      0.0152
# A tibble: 6 x 2
  name               fraction_total_reads
  <chr>                             <dbl>
1 Gordoniaceae                    0.00547
2 Corynebacteriaceae              0.00947
3 Enterobacteriaceae              0.0109 
4 Staphylococcaceae               0.0128 
5 Moraxellaceae                   0.0152 
6 Micrococcaceae                  0.0170 
mutate: converted 'name' from character to factor (0 new NA)
# A tibble: 6 x 2
  name               fraction_total_reads
  <fct>                             <dbl>
1 Gordoniaceae                    0.00547
2 Corynebacteriaceae              0.00947
3 Enterobacteriaceae              0.0109 
4 Staphylococcaceae               0.0128 
5 Moraxellaceae                   0.0152 
6 Micrococcaceae                  0.0170 
Saving 7 x 7 in image
+ cat SRR6145059.reads.bracken.class.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.reads.bracken.class.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ /projects/metaBGC//scripts/plot_abundances.sh SRR6145059.reads.bracken.class.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  name = col_character(),
  taxonomy_id = col_double(),
  taxonomy_lvl = col_character(),
  kraken_assigned_reads = col_double(),
  added_reads = col_double(),
  new_est_reads = col_double(),
  fraction_total_reads = col_double()
)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ Cand~     2497643 C                           6           7
2 SRR61~ Cand~     2517206 C                           5           0
3 SRR61~ Mamm~       40674 C                     5310201        3274
4 SRR61~ Beta~       28216 C                     1203227        6718
5 SRR61~ Acti~        1760 C                     1133662        2208
6 SRR61~ Gamm~        1236 C                      306384       13082
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
mutate: changed 89 values (92%) of 'name' (0 new NA)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ _oth~     2497643 C                           6           7
2 SRR61~ _oth~     2517206 C                           5           0
3 SRR61~ Mamm~       40674 C                     5310201        3274
4 SRR61~ Beta~       28216 C                     1203227        6718
5 SRR61~ Acti~        1760 C                     1133662        2208
6 SRR61~ Gamm~        1236 C                      306384       13082
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
group_by: one grouping variable (name)
summarize: now 9 rows and 2 columns, ungrouped
# A tibble: 6 x 2
  name                fraction_total_reads
  <chr>                              <dbl>
1 Actinobacteria                   0.135  
2 Alphaproteobacteria              0.0198 
3 Bacilli                          0.0181 
4 Betaproteobacteria               0.144  
5 Deinococci                       0.00169
6 Flavobacteriia                   0.00374
# A tibble: 6 x 2
  name                fraction_total_reads
  <chr>                              <dbl>
1 Mammalia                          0.632 
2 Betaproteobacteria                0.144 
3 Actinobacteria                    0.135 
4 Gammaproteobacteria               0.0380
5 Alphaproteobacteria               0.0198
6 Bacilli                           0.0181
# A tibble: 6 x 2
  name                fraction_total_reads
  <chr>                              <dbl>
1 Mammalia                          0.632 
2 Betaproteobacteria                0.144 
3 Actinobacteria                    0.135 
4 Gammaproteobacteria               0.0380
5 Alphaproteobacteria               0.0198
6 Bacilli                           0.0181
# A tibble: 6 x 2
  name                fraction_total_reads
  <chr>                              <dbl>
1 Deinococci                       0.00169
2 Flavobacteriia                   0.00374
3 _other_                          0.0069 
4 Bacilli                          0.0181 
5 Alphaproteobacteria              0.0198 
6 Gammaproteobacteria              0.0380 
mutate: converted 'name' from character to factor (0 new NA)
# A tibble: 6 x 2
  name                fraction_total_reads
  <fct>                              <dbl>
1 Deinococci                       0.00169
2 Flavobacteriia                   0.00374
3 _other_                          0.0069 
4 Bacilli                          0.0181 
5 Alphaproteobacteria              0.0198 
6 Gammaproteobacteria              0.0380 
Saving 7 x 7 in image
+ cat SRR6145059.reads.bracken.phylum.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.reads.bracken.phylum.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ /projects/metaBGC//scripts/plot_abundances.sh SRR6145059.reads.bracken.phylum.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  name = col_character(),
  taxonomy_id = col_double(),
  taxonomy_lvl = col_character(),
  kraken_assigned_reads = col_double(),
  added_reads = col_double(),
  new_est_reads = col_double(),
  fraction_total_reads = col_double()
)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ Cand~       95818 P                         451           0
2 SRR61~ Cand~       67810 P                          14          13
3 SRR61~ Cand~      363464 P                          16           0
4 SRR61~ Cand~     1801631 P                           4           1
5 SRR61~ Cand~     1655434 P                           5           0
6 SRR61~ Cand~       51967 P                           2           0
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
mutate: changed 51 values (89%) of 'name' (0 new NA)
# A tibble: 6 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ _oth~       95818 P                         451           0
2 SRR61~ _oth~       67810 P                          14          13
3 SRR61~ _oth~      363464 P                          16           0
4 SRR61~ _oth~     1801631 P                           4           1
5 SRR61~ _oth~     1655434 P                           5           0
6 SRR61~ _oth~       51967 P                           2           0
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
group_by: one grouping variable (name)
summarize: now 7 rows and 2 columns, ungrouped
# A tibble: 6 x 2
  name                fraction_total_reads
  <chr>                              <dbl>
1 Actinobacteria                   0.136  
2 Bacteroidetes                    0.00576
3 Chordata                         0.632  
4 Deinococcus-Thermus              0.00135
5 Firmicutes                       0.0197 
6 Proteobacteria                   0.203  
# A tibble: 6 x 2
  name           fraction_total_reads
  <chr>                         <dbl>
1 Chordata                    0.632  
2 Proteobacteria              0.203  
3 Actinobacteria              0.136  
4 Firmicutes                  0.0197 
5 Bacteroidetes               0.00576
6 _other_                     0.00254
# A tibble: 6 x 2
  name           fraction_total_reads
  <chr>                         <dbl>
1 Chordata                    0.632  
2 Proteobacteria              0.203  
3 Actinobacteria              0.136  
4 Firmicutes                  0.0197 
5 Bacteroidetes               0.00576
6 _other_                     0.00254
# A tibble: 6 x 2
  name                fraction_total_reads
  <chr>                              <dbl>
1 Deinococcus-Thermus              0.00135
2 _other_                          0.00254
3 Bacteroidetes                    0.00576
4 Firmicutes                       0.0197 
5 Actinobacteria                   0.136  
6 Proteobacteria                   0.203  
mutate: converted 'name' from character to factor (0 new NA)
# A tibble: 6 x 2
  name                fraction_total_reads
  <fct>                              <dbl>
1 Deinococcus-Thermus              0.00135
2 _other_                          0.00254
3 Bacteroidetes                    0.00576
4 Firmicutes                       0.0197 
5 Actinobacteria                   0.136  
6 Proteobacteria                   0.203  
Saving 7 x 7 in image
+ cat SRR6145059.reads.bracken.domain.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.reads.bracken.domain.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ /projects/metaBGC//scripts/plot_abundances.sh SRR6145059.reads.bracken.domain.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  name = col_character(),
  taxonomy_id = col_double(),
  taxonomy_lvl = col_character(),
  kraken_assigned_reads = col_double(),
  added_reads = col_double(),
  new_est_reads = col_double(),
  fraction_total_reads = col_double()
)
# A tibble: 4 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ Euka~        2759 D                     5310201        3274
2 SRR61~ Bact~           2 D                     3062950       16046
3 SRR61~ Viru~       10239 D                        5544         535
4 SRR61~ Arch~        2157 D                        2230          -2
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
mutate: changed 2 values (50%) of 'name' (0 new NA)
# A tibble: 4 x 8
  sample name  taxonomy_id taxonomy_lvl kraken_assigned~ added_reads
  <chr>  <chr>       <dbl> <chr>                   <dbl>       <dbl>
1 SRR61~ Euka~        2759 D                     5310201        3274
2 SRR61~ Bact~           2 D                     3062950       16046
3 SRR61~ _oth~       10239 D                        5544         535
4 SRR61~ _oth~        2157 D                        2230          -2
# ... with 2 more variables: new_est_reads <dbl>, fraction_total_reads <dbl>
group_by: one grouping variable (name)
summarize: now 3 rows and 2 columns, ungrouped
# A tibble: 3 x 2
  name      fraction_total_reads
  <chr>                    <dbl>
1 Bacteria               0.367  
2 Eukaryota              0.632  
3 _other_                0.00099
# A tibble: 3 x 2
  name      fraction_total_reads
  <chr>                    <dbl>
1 Eukaryota              0.632  
2 Bacteria               0.367  
3 _other_                0.00099
# A tibble: 3 x 2
  name      fraction_total_reads
  <chr>                    <dbl>
1 Eukaryota              0.632  
2 Bacteria               0.367  
3 _other_                0.00099
# A tibble: 3 x 2
  name      fraction_total_reads
  <chr>                    <dbl>
1 _other_                0.00099
2 Bacteria               0.367  
3 Eukaryota              0.632  
mutate: converted 'name' from character to factor (0 new NA)
# A tibble: 3 x 2
  name      fraction_total_reads
  <fct>                    <dbl>
1 _other_                0.00099
2 Bacteria               0.367  
3 Eukaryota              0.632  
Saving 7 x 7 in image
+ set -e
+ set -o pipefail
+ echo

+ echo '-- STEP 4 -- Assembly'
-- STEP 4 -- Assembly
+ rm -fr assembly/
+ megahit -1 SRR6145059_1.final.fastq.gz -2 SRR6145059_1.final.fastq.gz --out-dir assembly --out-prefix SRR6145059 --cleaning-rounds 10 --num-cpu-threads 192

real	46m35.772s
user	6092m28.065s
sys	58m7.196s
+ tail -2 SRR6145059.megahit.log
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ grep N50
+ grep -v ALL
+ sed 's/ \+/\t/g'
+ cut -f 1,5,8,11,14,17,20
+ /projects/metaBGC//scripts/get_sizes.py assembly/SRR6145059.contigs.fa
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ sed '1isample\tcontig\tlength'
+ /projects/metaBGC//scripts/plot_sizes.R SRR6145059.contigs.sizes.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  length = col_double()
)
# A tibble: 6 x 3
  sample     contig    length
  <chr>      <chr>      <dbl>
1 SRR6145059 k99_15746 135362
2 SRR6145059 k99_14351 117723
3 SRR6145059 k99_15713 115545
4 SRR6145059 k99_15706 113005
5 SRR6145059 k99_15760 100477
6 SRR6145059 k99_14609  87576
Saving 7 x 7 in image
+ /projects/metaBGC//scripts/filter_sizes.py assembly/SRR6145059.contigs.fa SRR6145059.contigs.fa 1000
Read  15809  sequences
Wrote  1475  sequences
Skipped  14334 sequences
+ echo

+ echo '-- STEP 5 -- Taxonomic classification of contigs'
-- STEP 5 -- Taxonomic classification of contigs
+ kraken2 --db /data/kraken2/db --threads 192 --classified-out SRR6145059.contigs.kraken.classified.fa --unclassified-out SRR6145059.contigs.kraken.unclassified.fa --report SRR6145059.contigs.kraken --use-names SRR6145059.contigs.fa

real	0m39.845s
user	0m17.297s
sys	0m40.933s
+ cat SRR6145059.contigs.kraken.classified.fa
+ grep '>'
+ sed 's/>//g'
+ sed 's/ .*|/\t/g'
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ sed '1isample\tcontig\ttaxid'
+ /projects/metaBGC//scripts/join.sh SRR6145059.contigs.kraken.classified.tmp /data/taxonomy/names.tsv SRR6145059.contigs.kraken.classified.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  taxid = col_double()
)
Rows: 1,461
Columns: 3
$ sample <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059", "SRR...
$ contig <chr> "k99_13021", "k99_3238", "k99_13514", "k99_8183", "k99_8019"...
$ taxid  <dbl> 1747, 1747, 1270, 1747, 134537, 1270, 1747, 1234380, 1270, 1...
Parsed with column specification:
cols(
  taxid = col_double(),
  name = col_character()
)
Rows: 2,260,364
Columns: 2
$ taxid <dbl> 1, 2, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23...
$ name  <chr> "root", "Bacteria", "Azorhizobium", "Azorhizobium caulinodans...
Joining, by = "taxid"
left_join: added one column (name)
           > rows only in x           0
           > rows only in y  (2,260,314)
           > matched rows         1,461
           >                 ===========
           > rows total           1,461
Rows: 1,461
Columns: 4
$ sample <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059", "SRR...
$ contig <chr> "k99_13021", "k99_3238", "k99_13514", "k99_8183", "k99_8019"...
$ taxid  <dbl> 1747, 1747, 1270, 1747, 134537, 1270, 1747, 1234380, 1270, 1...
$ name   <chr> "Cutibacterium acnes", "Cutibacterium acnes", "Micrococcus l...
# A tibble: 6 x 4
  sample     contig     taxid name                     
  <chr>      <chr>      <dbl> <chr>                    
1 SRR6145059 k99_13021   1747 Cutibacterium acnes      
2 SRR6145059 k99_3238    1747 Cutibacterium acnes      
3 SRR6145059 k99_13514   1270 Micrococcus luteus       
4 SRR6145059 k99_8183    1747 Cutibacterium acnes      
5 SRR6145059 k99_8019  134537 Paraburkholderia fungorum
6 SRR6145059 k99_13022   1270 Micrococcus luteus       
+ set +e
+ set +o pipefail
+ bracken -d /data/kraken2/db -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.species.tmp -l S -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.species.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l S -t 1
PROGRAM START TIME: 06-23-2021 01:26:20
BRACKEN SUMMARY (Kraken report: SRR6145059.contigs.kraken)
    >>> Threshold: 1 
    >>> Number of species in sample: 32 
	  >> Number of species with reads > threshold: 32 
	  >> Number of species with reads < threshold: 0 
    >>> Total reads in sample: 1475
	  >> Total reads kept at species level (reads > threshold): 1450
	  >> Total reads discarded (species reads < threshold): 0
	  >> Reads distributed: 1459
	  >> Reads not distributed (eg. no species above threshold): 2
	  >> Unclassified reads: 14
BRACKEN OUTPUT PRODUCED: SRR6145059.contigs.bracken.species.tmp
PROGRAM END TIME: 06-23-2021 01:26:20
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.genus.tmp -l G -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.genus.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l G -t 1
PROGRAM START TIME: 06-23-2021 01:26:20
BRACKEN SUMMARY (Kraken report: SRR6145059.contigs.kraken)
    >>> Threshold: 1 
    >>> Number of genuses in sample: 18 
	  >> Number of genuses with reads > threshold: 18 
	  >> Number of genuses with reads < threshold: 0 
    >>> Total reads in sample: 1475
	  >> Total reads kept at genuses level (reads > threshold): 1457
	  >> Total reads discarded (genuses reads < threshold): 0
	  >> Reads distributed: 1459
	  >> Reads not distributed (eg. no genuses above threshold): 2
	  >> Unclassified reads: 14
BRACKEN OUTPUT PRODUCED: SRR6145059.contigs.bracken.genus.tmp
PROGRAM END TIME: 06-23-2021 01:26:20
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.order.tmp -l O -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.order.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l O -t 1
PROGRAM START TIME: 06-23-2021 01:26:20
BRACKEN SUMMARY (Kraken report: SRR6145059.contigs.kraken)
    >>> Threshold: 1 
    >>> Number of orders in sample: 10 
	  >> Number of orders with reads > threshold: 10 
	  >> Number of orders with reads < threshold: 0 
    >>> Total reads in sample: 1475
	  >> Total reads kept at orders level (reads > threshold): 1459
	  >> Total reads discarded (orders reads < threshold): 0
	  >> Reads distributed: 1459
	  >> Reads not distributed (eg. no orders above threshold): 2
	  >> Unclassified reads: 14
BRACKEN OUTPUT PRODUCED: SRR6145059.contigs.bracken.order.tmp
PROGRAM END TIME: 06-23-2021 01:26:20
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.family.tmp -l F -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.family.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l F -t 1
PROGRAM START TIME: 06-23-2021 01:26:20
BRACKEN SUMMARY (Kraken report: SRR6145059.contigs.kraken)
    >>> Threshold: 1 
    >>> Number of families in sample: 12 
	  >> Number of families with reads > threshold: 12 
	  >> Number of families with reads < threshold: 0 
    >>> Total reads in sample: 1475
	  >> Total reads kept at families level (reads > threshold): 1458
	  >> Total reads discarded (families reads < threshold): 0
	  >> Reads distributed: 1459
	  >> Reads not distributed (eg. no families above threshold): 2
	  >> Unclassified reads: 14
BRACKEN OUTPUT PRODUCED: SRR6145059.contigs.bracken.family.tmp
PROGRAM END TIME: 06-23-2021 01:26:20
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.class.tmp -l C -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.class.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l C -t 1
PROGRAM START TIME: 06-23-2021 01:26:20
BRACKEN SUMMARY (Kraken report: SRR6145059.contigs.kraken)
    >>> Threshold: 1 
    >>> Number of classes in sample: 7 
	  >> Number of classes with reads > threshold: 7 
	  >> Number of classes with reads < threshold: 0 
    >>> Total reads in sample: 1475
	  >> Total reads kept at classes level (reads > threshold): 1460
	  >> Total reads discarded (classes reads < threshold): 0
	  >> Reads distributed: 1459
	  >> Reads not distributed (eg. no classes above threshold): 2
	  >> Unclassified reads: 14
BRACKEN OUTPUT PRODUCED: SRR6145059.contigs.bracken.class.tmp
PROGRAM END TIME: 06-23-2021 01:26:20
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.phylum.tmp -l P -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.phylum.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l P -t 1
PROGRAM START TIME: 06-23-2021 01:26:21
BRACKEN SUMMARY (Kraken report: SRR6145059.contigs.kraken)
    >>> Threshold: 1 
    >>> Number of phylums in sample: 6 
	  >> Number of phylums with reads > threshold: 6 
	  >> Number of phylums with reads < threshold: 0 
    >>> Total reads in sample: 1475
	  >> Total reads kept at phylums level (reads > threshold): 1460
	  >> Total reads discarded (phylums reads < threshold): 0
	  >> Reads distributed: 1459
	  >> Reads not distributed (eg. no phylums above threshold): 2
	  >> Unclassified reads: 14
BRACKEN OUTPUT PRODUCED: SRR6145059.contigs.bracken.phylum.tmp
PROGRAM END TIME: 06-23-2021 01:26:21
  Bracken complete.
+ bracken -d /data/kraken2/db -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.domain.tmp -l D -t 1
 >> Checking for Valid Options...
 >> Running Bracken 
      >> python src/est_abundance.py -i SRR6145059.contigs.kraken -o SRR6145059.contigs.bracken.domain.tmp -k /data/kraken2/db/database100mers.kmer_distrib -l D -t 1
PROGRAM START TIME: 06-23-2021 01:26:21
BRACKEN SUMMARY (Kraken report: SRR6145059.contigs.kraken)
    >>> Threshold: 1 
    >>> Number of domains in sample: 3 
	  >> Number of domains with reads > threshold: 3 
	  >> Number of domains with reads < threshold: 0 
    >>> Total reads in sample: 1475
	  >> Total reads kept at domains level (reads > threshold): 1461
	  >> Total reads discarded (domains reads < threshold): 0
	  >> Reads distributed: 1459
	  >> Reads not distributed (eg. no domains above threshold): 2
	  >> Unclassified reads: 14
BRACKEN OUTPUT PRODUCED: SRR6145059.contigs.bracken.domain.tmp
PROGRAM END TIME: 06-23-2021 01:26:21
  Bracken complete.
+ cat SRR6145059.contigs.bracken.species.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.contigs.bracken.species.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ cat SRR6145059.contigs.bracken.genus.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.contigs.bracken.genus.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ cat SRR6145059.contigs.bracken.order.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.contigs.bracken.order.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ cat SRR6145059.contigs.bracken.family.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.contigs.bracken.family.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ cat SRR6145059.contigs.bracken.class.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.contigs.bracken.class.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ cat SRR6145059.contigs.bracken.phylum.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.contigs.bracken.phylum.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ cat SRR6145059.contigs.bracken.domain.tmp
+ head -1
+ awk '{print "sample\t"$0;}'
+ cat SRR6145059.contigs.bracken.domain.tmp
+ sed 1d
+ sort -k 7 -nr
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ set -e
+ set -o pipefail
+ echo

+ echo '-- STEP 6 -- deepBGC'
-- STEP 6 -- deepBGC
+ deepbgc pipeline --prodigal-meta-mode --output SRR6145059 SRR6145059.contigs.fa

real	84m13.571s
user	92m55.146s
sys	37m47.740s
+ cat SRR6145059/SRR6145059.bgc.tsv
+ sed 1d
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ sed '1isample\tcontig\tdetector\tdetector_version\tdetector_label\tbgc_candidate_id\tnucl_start\tnucl_end\tnucl_length\tnum_proteins\tnum_domains\tnum_bio_domains\tdeepbgc_score\tproduct_activity\tantibacterial\tcytotoxic\tinhibitor\tantifungal\tproduct_class\tAlkaloid\tNRP\tOther\tPolyketide\tRiPP\tSaccharide\tTerpene\tprotein_ids\tbio_pfam_ids\tpfam_ids'
+ cat SRR6145059/SRR6145059.pfam.tsv
+ sed 1d
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ sed '1isample\tcontig\tprotein_id\tgene_start\tgene_end\tgene_strand\tpfam_id\tprotein_id\tdeepbgc_score\tin_cluster'
+ /projects/metaBGC//scripts/join.sh SRR6145059.bgc.pfam.tmp SRR6145059.contigs.kraken.classified.tsv SRR6145059.bgc.deepbgc.pfam.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  protein_id = col_character(),
  gene_start = col_double(),
  gene_end = col_double(),
  gene_strand = col_double(),
  pfam_id = col_character(),
  protein_id_1 = col_double(),
  deepbgc_score = col_double(),
  in_cluster = col_character()
)
Warning: 22132 parsing failures.
row col   expected    actual                      file
  1  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
  2  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
  3  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
  4  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
  5  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
... ... .......... ......... .........................
See problems(...) for more details.

Warning message:
Duplicated column names deduplicated: 'protein_id' => 'protein_id_1' [8] 
Rows: 22,132
Columns: 10
$ sample        <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059...
$ contig        <chr> "k99_13021", "k99_13021", "k99_3238", "k99_3238", "k9...
$ protein_id    <chr> "k99_13021_k99_13021_1", "k99_13021_k99_13021_1", "k9...
$ gene_start    <dbl> 0, 0, 1, 870, 1, 644, 644, 2, 464, 255, 255, 790, 790...
$ gene_end      <dbl> 1023, 1023, 871, 1707, 607, 1091, 1091, 410, 2144, 15...
$ gene_strand   <dbl> -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1...
$ pfam_id       <chr> "PF02151", "PF01541", "PF01619", "PF02517", "PF02585"...
$ protein_id_1  <dbl> 0.20727, 0.19886, 0.53068, 0.50216, 0.61506, 0.55860,...
$ deepbgc_score <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
$ in_cluster    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N...
Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  taxid = col_double(),
  name = col_character()
)
Rows: 1,461
Columns: 4
$ sample <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059", "SRR...
$ contig <chr> "k99_13021", "k99_3238", "k99_13514", "k99_8183", "k99_8019"...
$ taxid  <dbl> 1747, 1747, 1270, 1747, 134537, 1270, 1747, 1234380, 1270, 1...
$ name   <chr> "Cutibacterium acnes", "Cutibacterium acnes", "Micrococcus l...
Joining, by = c("sample", "contig")
left_join: added 2 columns (taxid, name)
           > rows only in x       42
           > rows only in y  (    72)
           > matched rows     22,090
           >                 ========
           > rows total       22,132
Rows: 22,132
Columns: 12
$ sample        <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059...
$ contig        <chr> "k99_13021", "k99_13021", "k99_3238", "k99_3238", "k9...
$ protein_id    <chr> "k99_13021_k99_13021_1", "k99_13021_k99_13021_1", "k9...
$ gene_start    <dbl> 0, 0, 1, 870, 1, 644, 644, 2, 464, 255, 255, 790, 790...
$ gene_end      <dbl> 1023, 1023, 871, 1707, 607, 1091, 1091, 410, 2144, 15...
$ gene_strand   <dbl> -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1...
$ pfam_id       <chr> "PF02151", "PF01541", "PF01619", "PF02517", "PF02585"...
$ protein_id_1  <dbl> 0.20727, 0.19886, 0.53068, 0.50216, 0.61506, 0.55860,...
$ deepbgc_score <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
$ in_cluster    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N...
$ taxid         <dbl> 1747, 1747, 1747, 1747, 1270, 1270, 1270, 1747, 1747,...
$ name          <chr> "Cutibacterium acnes", "Cutibacterium acnes", "Cutiba...
# A tibble: 6 x 12
  sample contig protein_id gene_start gene_end gene_strand pfam_id protein_id_1
  <chr>  <chr>  <chr>           <dbl>    <dbl>       <dbl> <chr>          <dbl>
1 SRR61~ k99_1~ k99_13021~          0     1023          -1 PF02151        0.207
2 SRR61~ k99_1~ k99_13021~          0     1023          -1 PF01541        0.199
3 SRR61~ k99_3~ k99_3238_~          1      871           1 PF01619        0.531
4 SRR61~ k99_3~ k99_3238_~        870     1707           1 PF02517        0.502
5 SRR61~ k99_1~ k99_13514~          1      607          -1 PF02585        0.615
6 SRR61~ k99_1~ k99_13514~        644     1091           1 PF11239        0.559
# ... with 4 more variables: deepbgc_score <dbl>, in_cluster <chr>,
#   taxid <dbl>, name <chr>
+ /projects/metaBGC//scripts/join.sh SRR6145059.bgc.full.tmp SRR6145059.contigs.kraken.classified.tsv SRR6145059.bgc.deepbgc.full.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  .default = col_double(),
  sample = col_character(),
  contig = col_character(),
  detector = col_character(),
  detector_version = col_character(),
  detector_label = col_character(),
  bgc_candidate_id = col_character(),
  product_activity = col_character(),
  product_class = col_character(),
  protein_ids = col_character(),
  bio_pfam_ids = col_character(),
  pfam_ids = col_character()
)
See spec(...) for full column specifications.
Rows: 490
Columns: 29
$ sample           <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145...
$ contig           <chr> "k99_3238", "k99_13514", "k99_8183", "k99_4897", "...
$ detector         <chr> "deepbgc", "deepbgc", "deepbgc", "deepbgc", "deepb...
$ detector_version <chr> "0.1.0", "0.1.0", "0.1.0", "0.1.0", "0.1.0", "0.1....
$ detector_label   <chr> "deepbgc", "deepbgc", "deepbgc", "deepbgc", "deepb...
$ bgc_candidate_id <chr> "k99_3238_1-1707.1", "k99_13514_1-1091.1", "k99_81...
$ nucl_start       <dbl> 1, 1, 2, 1705, 349, 2, 32, 45, 2, 905, 13640, 1861...
$ nucl_end         <dbl> 1707, 1091, 410, 2614, 5388, 1103, 2590, 1224, 518...
$ nucl_length      <dbl> 1706, 1090, 408, 909, 5039, 1101, 2558, 1179, 516,...
$ num_proteins     <dbl> 2, 2, 1, 1, 4, 2, 3, 1, 1, 16, 1, 2, 3, 2, 4, 1, 1...
$ num_domains      <dbl> 2, 3, 1, 1, 9, 2, 4, 1, 1, 11, 7, 2, 4, 2, 6, 1, 1...
$ num_bio_domains  <dbl> 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0,...
$ deepbgc_score    <dbl> 0.51642, 0.55778, 0.50728, 0.55258, 0.69198, 0.582...
$ product_activity <chr> "antibacterial", "antibacterial", "antibacterial",...
$ antibacterial    <dbl> 0.84, 0.87, 0.87, 0.87, 0.64, 0.55, 0.84, 0.87, 0....
$ cytotoxic        <dbl> 0.11, 0.08, 0.06, 0.06, 0.20, 0.03, 0.06, 0.06, 0....
$ inhibitor        <dbl> 0.13, 0.17, 0.17, 0.17, 0.07, 0.46, 0.20, 0.17, 0....
$ antifungal       <dbl> 0.20, 0.27, 0.26, 0.26, 0.13, 0.13, 0.25, 0.26, 0....
$ product_class    <chr> NA, NA, NA, NA, "RiPP", "Polyketide-Terpene", NA, ...
$ Alkaloid         <dbl> 0.00, 0.00, 0.00, 0.00, 0.04, 0.00, 0.00, 0.00, 0....
$ NRP              <dbl> 0.08, 0.08, 0.09, 0.09, 0.02, 0.02, 0.09, 0.09, 0....
$ Other            <dbl> 0.07, 0.07, 0.07, 0.07, 0.17, 0.02, 0.07, 0.07, 0....
$ Polyketide       <dbl> 0.32, 0.31, 0.33, 0.33, 0.05, 0.78, 0.33, 0.33, 0....
$ RiPP             <dbl> 0.26, 0.21, 0.21, 0.21, 0.68, 0.00, 0.21, 0.21, 0....
$ Saccharide       <dbl> 0.03, 0.06, 0.03, 0.03, 0.01, 0.02, 0.03, 0.03, 0....
$ Terpene          <dbl> 0.29, 0.32, 0.32, 0.32, 0.04, 0.89, 0.32, 0.32, 0....
$ protein_ids      <chr> "k99_3238_k99_3238_1;k99_3238_k99_3238_2", "k99_13...
$ bio_pfam_ids     <chr> NA, "PF02585", NA, NA, "PF00355", "PF00348", NA, N...
$ pfam_ids         <chr> "PF01619;PF02517", "PF02585;PF11239;PF14155", "PF0...
Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  taxid = col_double(),
  name = col_character()
)
Rows: 1,461
Columns: 4
$ sample <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059", "SRR...
$ contig <chr> "k99_13021", "k99_3238", "k99_13514", "k99_8183", "k99_8019"...
$ taxid  <dbl> 1747, 1747, 1270, 1747, 134537, 1270, 1747, 1234380, 1270, 1...
$ name   <chr> "Cutibacterium acnes", "Cutibacterium acnes", "Micrococcus l...
Joining, by = c("sample", "contig")
left_join: added 2 columns (taxid, name)
           > rows only in x       1
           > rows only in y  (1,026)
           > matched rows       489
           >                 =======
           > rows total         490
Rows: 490
Columns: 31
$ sample           <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145...
$ contig           <chr> "k99_3238", "k99_13514", "k99_8183", "k99_4897", "...
$ detector         <chr> "deepbgc", "deepbgc", "deepbgc", "deepbgc", "deepb...
$ detector_version <chr> "0.1.0", "0.1.0", "0.1.0", "0.1.0", "0.1.0", "0.1....
$ detector_label   <chr> "deepbgc", "deepbgc", "deepbgc", "deepbgc", "deepb...
$ bgc_candidate_id <chr> "k99_3238_1-1707.1", "k99_13514_1-1091.1", "k99_81...
$ nucl_start       <dbl> 1, 1, 2, 1705, 349, 2, 32, 45, 2, 905, 13640, 1861...
$ nucl_end         <dbl> 1707, 1091, 410, 2614, 5388, 1103, 2590, 1224, 518...
$ nucl_length      <dbl> 1706, 1090, 408, 909, 5039, 1101, 2558, 1179, 516,...
$ num_proteins     <dbl> 2, 2, 1, 1, 4, 2, 3, 1, 1, 16, 1, 2, 3, 2, 4, 1, 1...
$ num_domains      <dbl> 2, 3, 1, 1, 9, 2, 4, 1, 1, 11, 7, 2, 4, 2, 6, 1, 1...
$ num_bio_domains  <dbl> 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0,...
$ deepbgc_score    <dbl> 0.51642, 0.55778, 0.50728, 0.55258, 0.69198, 0.582...
$ product_activity <chr> "antibacterial", "antibacterial", "antibacterial",...
$ antibacterial    <dbl> 0.84, 0.87, 0.87, 0.87, 0.64, 0.55, 0.84, 0.87, 0....
$ cytotoxic        <dbl> 0.11, 0.08, 0.06, 0.06, 0.20, 0.03, 0.06, 0.06, 0....
$ inhibitor        <dbl> 0.13, 0.17, 0.17, 0.17, 0.07, 0.46, 0.20, 0.17, 0....
$ antifungal       <dbl> 0.20, 0.27, 0.26, 0.26, 0.13, 0.13, 0.25, 0.26, 0....
$ product_class    <chr> NA, NA, NA, NA, "RiPP", "Polyketide-Terpene", NA, ...
$ Alkaloid         <dbl> 0.00, 0.00, 0.00, 0.00, 0.04, 0.00, 0.00, 0.00, 0....
$ NRP              <dbl> 0.08, 0.08, 0.09, 0.09, 0.02, 0.02, 0.09, 0.09, 0....
$ Other            <dbl> 0.07, 0.07, 0.07, 0.07, 0.17, 0.02, 0.07, 0.07, 0....
$ Polyketide       <dbl> 0.32, 0.31, 0.33, 0.33, 0.05, 0.78, 0.33, 0.33, 0....
$ RiPP             <dbl> 0.26, 0.21, 0.21, 0.21, 0.68, 0.00, 0.21, 0.21, 0....
$ Saccharide       <dbl> 0.03, 0.06, 0.03, 0.03, 0.01, 0.02, 0.03, 0.03, 0....
$ Terpene          <dbl> 0.29, 0.32, 0.32, 0.32, 0.04, 0.89, 0.32, 0.32, 0....
$ protein_ids      <chr> "k99_3238_k99_3238_1;k99_3238_k99_3238_2", "k99_13...
$ bio_pfam_ids     <chr> NA, "PF02585", NA, NA, "PF00355", "PF00348", NA, N...
$ pfam_ids         <chr> "PF01619;PF02517", "PF02585;PF11239;PF14155", "PF0...
$ taxid            <dbl> 1747, 1270, 1747, 1747, 1234380, 1747, 1747, 1760,...
$ name             <chr> "Cutibacterium acnes", "Micrococcus luteus", "Cuti...
# A tibble: 6 x 31
  sample contig detector detector_version detector_label bgc_candidate_id
  <chr>  <chr>  <chr>    <chr>            <chr>          <chr>           
1 SRR61~ k99_3~ deepbgc  0.1.0            deepbgc        k99_3238_1-1707~
2 SRR61~ k99_1~ deepbgc  0.1.0            deepbgc        k99_13514_1-109~
3 SRR61~ k99_8~ deepbgc  0.1.0            deepbgc        k99_8183_2-410.1
4 SRR61~ k99_4~ deepbgc  0.1.0            deepbgc        k99_4897_1705-2~
5 SRR61~ k99_7~ deepbgc  0.1.0            deepbgc        k99_7773_349-53~
6 SRR61~ k99_5~ deepbgc  0.1.0            deepbgc        k99_5889_2-1103~
# ... with 25 more variables: nucl_start <dbl>, nucl_end <dbl>,
#   nucl_length <dbl>, num_proteins <dbl>, num_domains <dbl>,
#   num_bio_domains <dbl>, deepbgc_score <dbl>, product_activity <chr>,
#   antibacterial <dbl>, cytotoxic <dbl>, inhibitor <dbl>, antifungal <dbl>,
#   product_class <chr>, Alkaloid <dbl>, NRP <dbl>, Other <dbl>,
#   Polyketide <dbl>, RiPP <dbl>, Saccharide <dbl>, Terpene <dbl>,
#   protein_ids <chr>, bio_pfam_ids <chr>, pfam_ids <chr>, taxid <dbl>,
#   name <chr>
+ /projects/metaBGC//scripts/extract_proteins.py SRR6145059.bgc.deepbgc.full.tsv
+ sed 1d
+ sed '1isample\tcontig\tbgc_candidate_id\tdeepbgc_score\tproduct_activity\tprotein_id'
+ /projects/metaBGC//scripts/extract_pfams.R SRR6145059.bgc.deepbgc.proteins.tsv SRR6145059.bgc.pfam.tmp /projects/metaBGC//ref/pfam.tsv SRR6145059.contigs.kraken.classified.tsv SRR6145059.bgc.deepbgc.pfam.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  bgc_candidate_id = col_character(),
  deepbgc_score = col_double(),
  product_activity = col_character(),
  protein_id = col_character()
)
Rows: 1,829
Columns: 6
$ sample           <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145...
$ contig           <chr> "k99_3238", "k99_3238", "k99_13514", "k99_13514", ...
$ bgc_candidate_id <chr> "k99_3238_1-1707.1", "k99_3238_1-1707.1", "k99_135...
$ deepbgc_score    <dbl> 0.51642, 0.51642, 0.55778, 0.55778, 0.50728, 0.552...
$ product_activity <chr> "antibacterial", "antibacterial", "antibacterial",...
$ protein_id       <chr> "k99_3238_k99_3238_1", "k99_3238_k99_3238_2", "k99...
Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  protein_id = col_character(),
  gene_start = col_double(),
  gene_end = col_double(),
  gene_strand = col_double(),
  pfam_id = col_character(),
  protein_id_1 = col_double(),
  deepbgc_score = col_double(),
  in_cluster = col_character()
)
Warning: 22132 parsing failures.
row col   expected    actual                      file
  1  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
  2  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
  3  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
  4  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
  5  -- 10 columns 9 columns 'SRR6145059.bgc.pfam.tmp'
... ... .......... ......... .........................
See problems(...) for more details.

select: dropped one variable (in_cluster)
Warning message:
Duplicated column names deduplicated: 'protein_id' => 'protein_id_1' [8] 
Rows: 22,132
Columns: 9
$ sample        <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059...
$ contig        <chr> "k99_13021", "k99_13021", "k99_3238", "k99_3238", "k9...
$ protein_id    <chr> "k99_13021_k99_13021_1", "k99_13021_k99_13021_1", "k9...
$ gene_start    <dbl> 0, 0, 1, 870, 1, 644, 644, 2, 464, 255, 255, 790, 790...
$ gene_end      <dbl> 1023, 1023, 871, 1707, 607, 1091, 1091, 410, 2144, 15...
$ gene_strand   <dbl> -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1...
$ pfam_id       <chr> "PF02151", "PF01541", "PF01619", "PF02517", "PF02585"...
$ protein_id_1  <dbl> 0.20727, 0.19886, 0.53068, 0.50216, 0.61506, 0.55860,...
$ deepbgc_score <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
Parsed with column specification:
cols(
  pfam_id = col_character(),
  clan = col_character(),
  name = col_character(),
  family = col_character(),
  description = col_character()
)
rename: renamed one variable (pfam)
Rows: 17,929
Columns: 5
$ pfam_id     <chr> "PF00001", "PF00002", "PF00003", "PF00004", "PF00005", ...
$ clan        <chr> "CL0192", "CL0192", "CL0192", "CL0023", "CL0023", "CL00...
$ pfam        <chr> "GPCR_A", "GPCR_A", "GPCR_A", "P-loop_NTPase", "P-loop_...
$ family      <chr> "7tm_1", "7tm_2", "7tm_3", "AAA", "ABC_tran", "ATP-synt...
$ description <chr> "7 transmembrane receptor (rhodopsin family)", "7 trans...
Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  taxid = col_double(),
  name = col_character()
)
rename: renamed one variable (taxonomy)
Rows: 1,461
Columns: 4
$ sample   <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059", "S...
$ contig   <chr> "k99_13021", "k99_3238", "k99_13514", "k99_8183", "k99_801...
$ taxid    <dbl> 1747, 1747, 1270, 1747, 134537, 1270, 1747, 1234380, 1270,...
$ taxonomy <chr> "Cutibacterium acnes", "Cutibacterium acnes", "Micrococcus...
group_by: 5 grouping variables (sample, contig, gene_start, gene_end, protein_id)
top_n (grouped): no rows removed
select: dropped one variable (deepbgc_score)
Rows: 22,132
Columns: 8
Groups: sample, contig, gene_start, gene_end, protein_id [9,068]
$ sample       <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059"...
$ contig       <chr> "k99_13021", "k99_13021", "k99_3238", "k99_3238", "k99...
$ protein_id   <chr> "k99_13021_k99_13021_1", "k99_13021_k99_13021_1", "k99...
$ gene_start   <dbl> 0, 0, 1, 870, 1, 644, 644, 2, 464, 255, 255, 790, 790,...
$ gene_end     <dbl> 1023, 1023, 871, 1707, 607, 1091, 1091, 410, 2144, 153...
$ gene_strand  <dbl> -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1,...
$ pfam_id      <chr> "PF02151", "PF01541", "PF01619", "PF02517", "PF02585",...
$ protein_id_1 <dbl> 0.20727, 0.19886, 0.53068, 0.50216, 0.61506, 0.55860, ...
# A tibble: 6 x 8
# Groups:   sample, contig, gene_start, gene_end, protein_id [5]
  sample  contig protein_id gene_start gene_end gene_strand pfam_id protein_id_1
  <chr>   <chr>  <chr>           <dbl>    <dbl>       <dbl> <chr>          <dbl>
1 SRR614~ k99_1~ k99_13021~          0     1023          -1 PF02151        0.207
2 SRR614~ k99_1~ k99_13021~          0     1023          -1 PF01541        0.199
3 SRR614~ k99_3~ k99_3238_~          1      871           1 PF01619        0.531
4 SRR614~ k99_3~ k99_3238_~        870     1707           1 PF02517        0.502
5 SRR614~ k99_1~ k99_13514~          1      607          -1 PF02585        0.615
6 SRR614~ k99_1~ k99_13514~        644     1091           1 PF11239        0.559
Joining, by = c("sample", "contig", "protein_id")
inner_join: added 5 columns (gene_start, gene_end, gene_strand, pfam_id, protein_id_1)
            > rows only in x  (   178)
            > rows only in y  (18,527)
            > matched rows      3,605    (includes duplicates)
            >                 ========
            > rows total        3,605
Joining, by = "pfam_id"
left_join: added 4 columns (clan, pfam, family, description)
           > rows only in x        0
           > rows only in y  (16,826)
           > matched rows      3,605
           >                 ========
           > rows total        3,605
Joining, by = c("sample", "contig")
left_join: added 2 columns (taxid, taxonomy)
           > rows only in x       2
           > rows only in y  (1,026)
           > matched rows     3,603
           >                 =======
           > rows total       3,605
select: dropped 2 variables (deepbgc_score, gene_strand)
Rows: 3,605
Columns: 15
$ sample           <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145...
$ contig           <chr> "k99_3238", "k99_3238", "k99_13514", "k99_13514", ...
$ bgc_candidate_id <chr> "k99_3238_1-1707.1", "k99_3238_1-1707.1", "k99_135...
$ product_activity <chr> "antibacterial", "antibacterial", "antibacterial",...
$ protein_id       <chr> "k99_3238_k99_3238_1", "k99_3238_k99_3238_2", "k99...
$ gene_start       <dbl> 1, 870, 1, 644, 644, 2, 1705, 349, 1111, 1533, 153...
$ gene_end         <dbl> 871, 1707, 607, 1091, 1091, 410, 2614, 1096, 1519,...
$ pfam_id          <chr> "PF01619", "PF02517", "PF02585", "PF11239", "PF141...
$ protein_id_1     <dbl> 0.53068, 0.50216, 0.61506, 0.55860, 0.44240, 0.507...
$ clan             <chr> "CL0086", "CL0472", NA, NA, NA, NA, "CL0103", "CL0...
$ pfam             <chr> "FAD_oxidored", "Peptidase_U", NA, NA, NA, NA, "Ga...
$ family           <chr> "Pro_dh", "CPBP", "PIG-L", "DUF3040", "DUF4307", "...
$ description      <chr> "Proline dehydrogenase", "CPBP intramembrane metal...
$ taxid            <dbl> 1747, 1747, 1270, 1270, 1270, 1747, 1747, 1234380,...
$ taxonomy         <chr> "Cutibacterium acnes", "Cutibacterium acnes", "Mic...
# A tibble: 6 x 15
  sample contig bgc_candidate_id product_activity protein_id gene_start gene_end
  <chr>  <chr>  <chr>            <chr>            <chr>           <dbl>    <dbl>
1 SRR61~ k99_3~ k99_3238_1-1707~ antibacterial    k99_3238_~          1      871
2 SRR61~ k99_3~ k99_3238_1-1707~ antibacterial    k99_3238_~        870     1707
3 SRR61~ k99_1~ k99_13514_1-109~ antibacterial    k99_13514~          1      607
4 SRR61~ k99_1~ k99_13514_1-109~ antibacterial    k99_13514~        644     1091
5 SRR61~ k99_1~ k99_13514_1-109~ antibacterial    k99_13514~        644     1091
6 SRR61~ k99_8~ k99_8183_2-410.1 antibacterial    k99_8183_~          2      410
# ... with 8 more variables: pfam_id <chr>, protein_id_1 <dbl>, clan <chr>,
#   pfam <chr>, family <chr>, description <chr>, taxid <dbl>, taxonomy <chr>
+ mv SRR6145059/SRR6145059.bgc.gbk SRR6145059.bgc.deepbgc.gbk
+ echo

+ echo '-- STEP 7 -- antiSmash'
-- STEP 7 -- antiSmash
+ antismash --cpus 192 --genefinding-tool prodigal --output-dir antismash SRR6145059.contigs.fa

real	229m46.453s
user	322m21.335s
sys	917m55.104s
+ mv antismash/SRR6145059.contigs.gbk SRR6145059.bgc.antismash.gbk
+ echo -e 'sample\tcontig\tantismash_region\tregion_start\tregion_end'
+ /projects/metaBGC//scripts/parse_genbank.py SRR6145059.bgc.antismash.gbk
+ awk -v sample=SRR6145059 '{print sample"\t"$0;}'
+ /projects/metaBGC//scripts/join.sh SRR6145059.bgc.antismash.tmp SRR6145059.contigs.kraken.classified.tsv SRR6145059.bgc.antismash.tsv
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.1
v tidyr   1.1.1     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attaching package: 'tidylog'

The following objects are masked from 'package:dplyr':

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from 'package:tidyr':

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    spread, uncount

The following object is masked from 'package:stats':

    filter

Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  antismash_region = col_character(),
  region_start = col_double(),
  region_end = col_double()
)
Rows: 15
Columns: 5
$ sample           <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145...
$ contig           <chr> "k99_14334", "k99_14590", "k99_14915", "k99_13463"...
$ antismash_region <chr> "RiPP-like", "NRPS", "terpene", "hserlactone", "te...
$ region_start     <dbl> 25413, 21938, 3616, 1187, 1, 58368, 1, 1, 1, 42670...
$ region_end       <dbl> 35214, 49970, 22596, 21780, 1017, 72501, 31668, 50...
Parsed with column specification:
cols(
  sample = col_character(),
  contig = col_character(),
  taxid = col_double(),
  name = col_character()
)
Rows: 1,461
Columns: 4
$ sample <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145059", "SRR...
$ contig <chr> "k99_13021", "k99_3238", "k99_13514", "k99_8183", "k99_8019"...
$ taxid  <dbl> 1747, 1747, 1270, 1747, 134537, 1270, 1747, 1234380, 1270, 1...
$ name   <chr> "Cutibacterium acnes", "Cutibacterium acnes", "Micrococcus l...
Joining, by = c("sample", "contig")
left_join: added 2 columns (taxid, name)
           > rows only in x       0
           > rows only in y  (1,446)
           > matched rows        15
           >                 =======
           > rows total          15
Rows: 15
Columns: 7
$ sample           <chr> "SRR6145059", "SRR6145059", "SRR6145059", "SRR6145...
$ contig           <chr> "k99_14334", "k99_14590", "k99_14915", "k99_13463"...
$ antismash_region <chr> "RiPP-like", "NRPS", "terpene", "hserlactone", "te...
$ region_start     <dbl> 25413, 21938, 3616, 1187, 1, 58368, 1, 1, 1, 42670...
$ region_end       <dbl> 35214, 49970, 22596, 21780, 1017, 72501, 31668, 50...
$ taxid            <dbl> 134537, 134537, 134537, 134537, 1270, 134537, 1345...
$ name             <chr> "Paraburkholderia fungorum", "Paraburkholderia fun...
# A tibble: 6 x 7
  sample   contig  antismash_region region_start region_end  taxid name         
  <chr>    <chr>   <chr>                   <dbl>      <dbl>  <dbl> <chr>        
1 SRR6145~ k99_14~ RiPP-like               25413      35214 134537 Paraburkhold~
2 SRR6145~ k99_14~ NRPS                    21938      49970 134537 Paraburkhold~
3 SRR6145~ k99_14~ terpene                  3616      22596 134537 Paraburkhold~
4 SRR6145~ k99_13~ hserlactone              1187      21780 134537 Paraburkhold~
5 SRR6145~ k99_30~ terpene                     1       1017   1270 Micrococcus ~
6 SRR6145~ k99_15~ terpene                 58368      72501 134537 Paraburkhold~
+ echo

+ echo '-- STEP 8 -- Cleaning'
-- STEP 8 -- Cleaning
+ rm -fr SRR6145059.fastq.gz
+ rm -fr SRR6145059.sra
+ rm -fr SRR6145059.fastp.html
+ rm -fr SRR6145059_1.fastq.gz
+ rm -fr SRR6145059_2.fastq.gz
+ rm -fr SRR6145059_1.filtered.fastq.gz
+ rm -fr SRR6145059_2.filtered.fastq.gz
+ rm -fr SRR6145059_1.final.fastq.gz
+ rm -fr SRR6145059_1.final.fastq.gz
+ rm -fr SRR6145059.filtered.fastq.gz
+ rm -fr SRR6145059.reads.kraken.classified.fq
+ rm -fr SRR6145059.reads.kraken.unclassified.fq
+ rm -fr SRR6145059.reads.kraken.classified.tsv
+ rm -fr SRR6145059.reads.kraken.classified_1.fq
+ rm -fr SRR6145059.reads.kraken.classified_2.fq
+ rm -fr SRR6145059.reads.kraken.unclassified_1.fq
+ rm -fr SRR6145059.reads.kraken.unclassified_2.fq
+ rm -fr SRR6145059.contigs.kraken SRR6145059.contigs_bracken_classes.kraken SRR6145059.contigs_bracken_domains.kraken SRR6145059.contigs_bracken_families.kraken SRR6145059.contigs_bracken_genuses.kraken SRR6145059.contigs_bracken_orders.kraken SRR6145059.contigs_bracken_phylums.kraken SRR6145059.contigs_bracken_species.kraken SRR6145059.reads.kraken SRR6145059.reads_bracken_classes.kraken SRR6145059.reads_bracken_domains.kraken SRR6145059.reads_bracken_families.kraken SRR6145059.reads_bracken_genuses.kraken SRR6145059.reads_bracken_orders.kraken SRR6145059.reads_bracken_phylums.kraken SRR6145059.reads_bracken_species.kraken
+ rm -fr SRR6145059.bgc.antismash.tmp SRR6145059.bgc.full.tmp SRR6145059.bgc.pfam.tmp SRR6145059.contigs.bracken.class.tmp SRR6145059.contigs.bracken.domain.tmp SRR6145059.contigs.bracken.family.tmp SRR6145059.contigs.bracken.genus.tmp SRR6145059.contigs.bracken.order.tmp SRR6145059.contigs.bracken.phylum.tmp SRR6145059.contigs.bracken.species.tmp SRR6145059.contigs.kraken.classified.tmp SRR6145059.reads.bracken.class.tmp SRR6145059.reads.bracken.domain.tmp SRR6145059.reads.bracken.family.tmp SRR6145059.reads.bracken.genus.tmp SRR6145059.reads.bracken.order.tmp SRR6145059.reads.bracken.phylum.tmp SRR6145059.reads.bracken.species.tmp
+ rm -fr SRR6145059.bgc.antismash.log SRR6145059.bgc.deepbgc.log SRR6145059.contigs.kraken.log SRR6145059.megahit.log SRR6145059.reads.kraken.log
+ rm -fr assembly
+ rm -fr SRR6145059
+ rm -fr SRR6145059.fastp.html
+ rm -fr antismash
+ gzip SRR6145059.contigs.fa SRR6145059.contigs.kraken.classified.fa SRR6145059.contigs.kraken.unclassified.fa
+ touch /projects/metaBGC//samples/SRR6145059.SUCCESS
+ echo '--END-- SRR6145059'
--END-- SRR6145059
+ date
Wed Jun 23 06:40:34 UTC 2021
++ date +%s%N
+ tt=24140307
+ echo 'Time: 24140307 milliseconds'
Time: 24140307 milliseconds
